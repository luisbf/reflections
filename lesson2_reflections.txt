What happens when you initialize a repository? Why do you need to do it?

A hidden .git folder with metadata is created.
In order to keep track of the changes introduced by the programmer using Git.



How is the staging area different from the working directory and the repository?
What value do you think it offers?

Staging area is an intermediate storage of files between the working directory and the repository.
It can hold several files before adding them to the repository by submitting a commit.



How can you use the staging area to make sure you have one commit per logical
change?

I can temporarily move the files with the logical change to the staging area before submitting the commit.



What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

When I want to test a new idea in my project without changing its main functioning (master branch)



How do the diagrams help you visualize the branch structure?

It helps to see the different commits as nodes and where the branches split up or merge.



What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

The commits of both branched will be reachable in the branch that is currently checked-out.
The diagram helps us to see where the branches split up and merged together.


What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?

Automatic merging is smoother and easier to perform from the programmer POV.
Manual merging can be tedious but it is an important step to avoid the program to crash.


